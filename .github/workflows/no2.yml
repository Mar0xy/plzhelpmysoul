name: Build FreeBSD Wine Package (i386)

on:
  workflow_dispatch:
    inputs:
      wine_version:
        description: 'Specify which Wine flavor to build (e.g., wine, wine-devel, wine-proton)'
        required: true
        default: 'wine'

jobs:
  build-freebsd-pkg-i386:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Build Wine Package on FreeBSD 14.3 VM (i386)
        uses: cross-platform-actions/action@v0.29.0
        with:
          operating_system: freebsd
          version: '14.3'
          # The script below runs entirely inside the temporary FreeBSD VM
          run: |
            set -eux  # Exit immediately on error

            CHROOT_NAME="i386_build_chroot"
            CHROOT_ROOT="/usr/chroot/$CHROOT_NAME"
            RELEASE_VERSION="14.3" # Use a stable version of i386 base

            # 1. Create and populate the i386 environment
            echo "Setting up i386 chroot at $CHROOT_ROOT..."
            sudo mkdir -p "$CHROOT_ROOT"
      
            sudo fetch --no-verify-peer https://ftp.freebsd.org/pub/FreeBSD/releases/i386/i386/$RELEASE_VERSION-RELEASE/base.txz -o /tmp/base.txz
            sudo tar -xpf /tmp/base.txz -C "$CHROOT_ROOT"
            sudo chown -R root:wheel "$CHROOT_ROOT"
            
            # Copy essential host files for networking and device access
            sudo cp /etc/resolv.conf "$CHROOT_ROOT"/etc/resolv.conf
            # Mount the devfs file system inside the chroot
            sudo mount -t devfs devfs "$CHROOT_ROOT"/dev

            # CRITICAL FIX 1: Create the repository configuration directory
            echo "Creating pkg repository configuration directory..."
            sudo mkdir -p "$CHROOT_ROOT"/usr/local/etc/pkg/repos
            
            # CRITICAL FIX 2: Create the FreeBSD.conf file pointing to the i386 repository
            echo "Creating FreeBSD.conf with i386 repository settings..."
            cat <<EOF | sudo tee "$CHROOT_ROOT"/usr/local/etc/pkg/repos/FreeBSD.conf
            FreeBSD: {
              url: "pkg+http://pkg.FreeBSD.org/FreeBSD:\${ABI:CUPCASE}/quarterly",
              mirror_type: "srv",
              enabled: yes,
              priority: 5,
              signature_type: "fingerprints",
              fingerprints: "/usr/share/keys/pkg",
              # The i386 base system is running, so pkg should use the i386 repository.
            }
            EOF
            
            # 2. Prepare Ports and Build the package inside the 32-bit chroot
            echo "Preparing ports inside the i386 chroot..."
            
            # Bootstrap all required dependencies
            sudo chroot "$CHROOT_ROOT" sh -c 'env ASSUME_ALWAYS_YES=YES \
                pkg install -y pkg git gmake pkgconf perl5 llvm19 flex bison desktop-file-utils gettext-tools gettext ninja gstreamer1-plugins sdl2 gcc13 binutils xorgproto libX11 libXcomposite libXcursor libXext libXi libXinerama libXrandr libXrender'
            
            # Clone ports
            sudo chroot "$CHROOT_ROOT" sh -c 'git clone --depth 1 --branch 2025Q4 https://git.freebsd.org/ports.git /usr/ports'
            
            WINE_FLAVOR="${{ github.event.inputs.wine_version || 'wine-stable' }}"
            PORTS_PATH="/usr/ports/emulators/${WINE_FLAVOR}"
            echo "Building $WINE_FLAVOR in i386 chroot..."
            
            # Build the 32-bit package
            BUILD_CMD="cd $PORTS_PATH && make clean && make BATCH=yes DISABLE_LICENSES=yes package"
            sudo chroot "$CHROOT_ROOT" sh -c "$BUILD_CMD"
            
            # 3. Find, copy, and clean up
            PKG_FILE=$(find "$CHROOT_ROOT"/usr/ports/packages/All/ -name "${WINE_FLAVOR}*.pkg" | head -n 1)
            
            if [ -z "$PKG_FILE" ]; then
                PKG_FILE=$(find "$CHROOT_ROOT"/usr/ports/packages/All/ -name "${WINE_FLAVOR}*.txz" | head -n 1)
            fi
            
            echo "Successfully built package: $PKG_FILE"
            sudo cp "$PKG_FILE" "${GITHUB_WORKSPACE}/"
            
            # Clean up: Unmount devfs and remove the chroot directory
            sudo umount "$CHROOT_ROOT"/dev
            # Note: Using rm -rf is necessary for cleanup but should be handled with extreme care!
            sudo rm -rf "$CHROOT_ROOT"
  
      - name: Upload Wine Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: freebsd-wine-package
          # Search for any .pkg file copied back to the workspace root
          path: ${{ github.workspace }}/*.pkg
          retention-days: 7
        
