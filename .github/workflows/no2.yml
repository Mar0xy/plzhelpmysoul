name: Build FreeBSD Wine Package (i386)

on:
  workflow_dispatch:
    inputs:
      wine_version:
        description: 'Specify which Wine flavor to build (e.g., wine, wine-devel, wine-proton)'
        required: true
        default: 'wine'

jobs:
  build-freebsd-pkg-i386:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Build Wine Package on FreeBSD 14.3 VM (i386)
        uses: cross-platform-actions/action@v0.29.0
        with:
          operating_system: freebsd
          version: '14.3'
          # The script below runs entirely inside the temporary FreeBSD VM
          run: |
            # Set up the Ports environment
            sudo pkg install -y git gmake pkgconf perl5 llvm19 flex bison desktop-file-utils gettext-tools gettext ninja gstreamer1-plugins sdl2 gcc13 binutils xorgproto libX11 libXcomposite libXcursor libXext libXi libXinerama libXrandr libXrender
            
            set -eux  # Exit immediately on error

            JAIL_NAME="i386_build_jail"
            JAIL_ROOT="/usr/jail/$JAIL_NAME"
            RELEASE_VERSION="14.3" # Use a stable version of i386 base
      
            # 1. Create and populate the i386 jail
            echo "Setting up i386 jail..."
            sudo mkdir -p "$JAIL_ROOT"
            sudo fetch --no-verify-peer https://ftp.freebsd.org/pub/FreeBSD/releases/i386/i386/$RELEASE_VERSION-RELEASE/base.txz -o /tmp/base.txz
            sudo tar -xpf /tmp/base.txz -C "$JAIL_ROOT"
            sudo cp /etc/resolv.conf "$JAIL_ROOT"/etc/resolv.conf
            sudo chown -R root:wheel "$JAIL_ROOT"
      
            # 2. Start the jail
            echo "Starting i386 jail..."
            # Use `lo0` interface or no IP for simplicity in a CI environment
            sudo jail -c "$JAIL_NAME" host.hostname="$JAIL_NAME" path="$JAIL_ROOT" allow.mount.devfs=1 mount.devfs
            JAIL_JID=$(jls -j "$JAIL_NAME" -o jid | tail -1)
      
            # 3. Prepare Ports inside the 32-bit jail
            echo "Preparing ports inside the i386 jail..."
            # Use jexec to run commands inside the jail
            sudo jexec "$JAIL_JID" sh -c 'pkg bootstrap -f -y'
            sudo jexec "$JAIL_JID" sh -c 'pkg install -y git gmake pkgconf perl5 llvm19 flex bison desktop-file-utils gettext-tools gettext ninja gstreamer1-plugins sdl2 gcc13 binutils xorgproto libX11 libXcomposite libXcursor libXext libXi libXinerama libXrandr libXrender'
            # Clone ports only once for all builds
            sudo jexec "$JAIL_JID" sh -c 'git clone --depth 1 --branch 2025Q4 https://git.freebsd.org/ports.git /usr/ports'
      
            # 4. Build the package inside the jail
            WINE_FLAVOR="${{ github.event.inputs.wine_version || 'wine-stable' }}"
            PORTS_PATH="/usr/ports/emulators/${WINE_FLAVOR}"
            echo "Building $WINE_FLAVOR in i386 jail..."
      
            # All build-time dependencies will be installed as 32-bit by pkg/ports inside the jail.
            BUILD_CMD="cd $PORTS_PATH && make clean && make BATCH=yes DISABLE_LICENSES=yes package"
            sudo jexec "$JAIL_JID" sh -c "$BUILD_CMD"
      
            # 5. Find, copy, and clean up
            PKG_FILE=$(find "$JAIL_ROOT"/usr/ports/packages/All/ -name "${WINE_FLAVOR}*.pkg" | head -n 1)
            
            # If not found, check for the traditional .txz extension
            if [ -z "$PKG_FILE" ]; then
                PKG_FILE=$(find "$JAIL_ROOT"/usr/ports/packages/All/ -name "${WINE_FLAVOR}*.txz" | head -n 1)
            fi
      
            echo "Successfully built package: $PKG_FILE"
            sudo cp "$PKG_FILE" "${GITHUB_WORKSPACE}/"
      
            # Stop the jail
            sudo jail -r "$JAIL_JID"
  
      - name: Upload Wine Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: freebsd-wine-package
          # Search for any .pkg file copied back to the workspace root
          path: ${{ github.workspace }}/*.pkg
          retention-days: 7
        
